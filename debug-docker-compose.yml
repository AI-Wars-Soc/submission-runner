version: "3.7"
services:
  submission-runner:
    build: ./
    image: aiwarsoc/submission-runner:debug
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - type: bind
        source: "./runner"
        target: "/exec/runner"
        read_only: true
      - type: bind
        source: "./sandbox"
        target: "/exec/sandbox"
        read_only: true
      - type: bind
        source: "./shared"
        target: "/exec/shared"
        read_only: true
      - "repositories:/repositories"
    networks:
      - database
    ports:
      - "5000:8080"
    environment:
      DEBUG: "True"
      SANDBOX_COMMAND_TIMEOUT: 25s
      SANDBOX_CONTAINER_TIMEOUT: 25s
      SANDBOX_PARSER_TIMEOUT: 20
      SANDBOX_MEM_LIMIT: 256m
      SANDBOX_CPU_COUNT: 0.5
      DATABASE_CONNECTION: "postgresql://debug:debug@database"
      SCORE_TURBULENCE_MILLIS: 2000
      INITIAL_SCORE: 1000
      GAMEMODE: chess
      MATCHMAKERS: 10
      GAME_OPTIONS: '{"chess960": true}'
      SECONDS_PER_RUN: 20
    depends_on:
      - database
  web-server:
    build: ../front-end
    image: aiwarssoc/front-end:debug
    ports:
      - "80:8080"
    volumes:
      - "../front-end/server:/home/web_user/server"
      - "repositories:/repositories"
    networks:
      - redis
      - database
    environment:
      DEBUG: "True"
      SERVER_NAME: "lvh.me"
      CLIENT_ID: "389788965612-qh4j3n7fh14nfjbg7u1tmlb59mudmobj.apps.googleusercontent.com"
      DATABASE_CONNECTION: "postgresql://debug:debug@database"
      MAX_REPO_SIZE_BYTES: 10000000
      INITIAL_SCORE: 1000
    secrets:
      - secret_key
    depends_on:
      - database
      - redis
  redis:
    image: redis
    volumes:
      - "./tmp/redis:/data"
    command: "--appendonly yes"
    networks:
      redis:
        aliases:
          - redis
  database:
    image: postgres
    networks:
      database:
        aliases:
          - database
    environment:
      POSTGRES_USER: debug
      POSTGRES_PASSWORD: debug
  adminer:
    image: adminer
    ports:
      - 8080:8080
    networks:
      - database
    depends_on:
      - database

networks:
  redis:
  database:
secrets:
  secret_key:
    file: ./debug_secret.txt
volumes:
  repositories:
